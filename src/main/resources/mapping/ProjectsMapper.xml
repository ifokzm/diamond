<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ml.diamond.mapper.ProjectsMapper" >
  <resultMap id="BaseResultMap" type="com.ml.diamond.entity.Projects" >
    <id column="Project_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="Project_Name" property="projectName" jdbcType="VARCHAR" />
    <result column="Group_Name" property="groupName" jdbcType="VARCHAR" />
    <result column="Generalize_Name" property="generalizeName" jdbcType="VARCHAR" />
    <result column="District" property="district" jdbcType="VARCHAR" />
    <result column="Project_D_type" property="projectDType" jdbcType="VARCHAR" />
    <result column="ProjectRegion" property="projectRegion" jdbcType="VARCHAR" />
    <result column="Location" property="location" jdbcType="VARCHAR" />
    <result column="Developer" property="developer" jdbcType="VARCHAR" />
    <result column="Open_Date" property="openDate" jdbcType="TIMESTAMP" />
    <result column="First_OpenDate" property="firstOpenDate" jdbcType="TIMESTAMP" />
    <result column="Last_OpenDate" property="lastOpenDate" jdbcType="TIMESTAMP" />
  </resultMap>

  <sql id="Base_Column_List" >
    Project_ID, Project_Name, Group_Name, Generalize_Name, District, Project_D_type, ProjectRegion,
    Location, Developer, Open_Date, First_OpenDate, Last_OpenDate
  </sql>


  <select id="getCount" resultType="java.lang.Integer" parameterType="com.ml.diamond.entity.Projects" >
    select count(1) from Projects
  </select>

  <select id="getPage" resultMap="BaseResultMap" parameterType="com.ml.diamond.entity.Projects" >
    SELECT
    <include refid="Base_Column_List" />
    FROM
    Projects a,
    (SELECT TOP ${limit} row_number () OVER (ORDER BY Project_ID DESC) n, Project_ID AS 'projectId' FROM Projects) b
    WHERE
    a.Project_ID = b.projectId
    AND b.n > ${offset}
    ORDER BY b.n ASC
  </select>

</mapper>