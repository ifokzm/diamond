<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ml.diamond.mapper.BuildingsMapper" >
  <resultMap id="BaseResultMap" type="com.ml.diamond.entity.Buildings" >
    <id column="Building_ID" property="buildingId" jdbcType="VARCHAR" />
    <id column="Project_ID" property="projectId" jdbcType="VARCHAR" />
    <result column="Building_Name" property="buildingName" jdbcType="VARCHAR" />
    <result column="Project_name" property="projectName" jdbcType="VARCHAR" />
    <result column="Group_Name" property="groupName" jdbcType="VARCHAR" />
    <result column="Open_Date" property="openDate" jdbcType="TIMESTAMP" />
    <result column="Room_TopFloor" property="roomTopFloor" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    Building_ID, Project_ID, Building_Name, Project_Name, Group_Name, Open_Date, Room_TopFloor
  </sql>

  <select id="getCount" resultType="java.lang.Integer" parameterType="com.ml.diamond.entity.Buildings" >
    select count(1) from Buildings
  </select>

  <select id="getPage" resultMap="BaseResultMap" parameterType="com.ml.diamond.entity.Buildings" >
    SELECT
      <include refid="Base_Column_List" />
    FROM
      Buildings a,
          (SELECT TOP ${limit} row_number () OVER (ORDER BY Building_ID DESC) n, Building_ID AS 'buildingId' FROM Buildings) b
    WHERE
        a.Building_ID = b.buildingId
    AND b.n > ${offset}
    ORDER BY b.n ASC
  </select>

</mapper>